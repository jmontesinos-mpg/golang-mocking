// Code generated by MockGen. DO NOT EDIT.
// Source: jmontesinos/golang-mocking/test (interfaces: APIServiceX)
//
// Generated by this command:
//
//	mockgen -destination gomock_other_service.go -package mocks jmontesinos/golang-mocking/test APIServiceX
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAPIServiceX is a mock of APIServiceX interface.
type MockAPIServiceX struct {
	ctrl     *gomock.Controller
	recorder *MockAPIServiceXMockRecorder
}

// MockAPIServiceXMockRecorder is the mock recorder for MockAPIServiceX.
type MockAPIServiceXMockRecorder struct {
	mock *MockAPIServiceX
}

// NewMockAPIServiceX creates a new mock instance.
func NewMockAPIServiceX(ctrl *gomock.Controller) *MockAPIServiceX {
	mock := &MockAPIServiceX{ctrl: ctrl}
	mock.recorder = &MockAPIServiceXMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIServiceX) EXPECT() *MockAPIServiceXMockRecorder {
	return m.recorder
}

// IncrementCounterBy mocks base method.
func (m *MockAPIServiceX) IncrementCounterBy(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementCounterBy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrementCounterBy indicates an expected call of IncrementCounterBy.
func (mr *MockAPIServiceXMockRecorder) IncrementCounterBy(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementCounterBy", reflect.TypeOf((*MockAPIServiceX)(nil).IncrementCounterBy), arg0)
}

// SendMessage mocks base method.
func (m *MockAPIServiceX) SendMessage(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMessage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MockAPIServiceXMockRecorder) SendMessage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockAPIServiceX)(nil).SendMessage), arg0)
}
